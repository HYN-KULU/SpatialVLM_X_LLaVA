version: '3.8'

services:
  depth_processor:
    build:
      context: ../docker/depth_processor
    volumes:
      - ${IMAGE_DIR}:${IMAGE_DIR}
      - ${OUTPUT_DIR}:${OUTPUT_DIR}
    command: --output_dir ${OUTPUT_DIR} --image_dir ${IMAGE_DIR}
    environment:
      NVIDIA_VISIBLE_DEVICES: all
    deploy:
      resources:
        reservations:
          devices:
          - capabilities: ["gpu"]

  caption_processor:
    build:
      context: ../docker/caption_processor
    volumes:
      - ${IMAGE_DIR}:${IMAGE_DIR}
      - ${OUTPUT_DIR}:${OUTPUT_DIR}
    depends_on:
      - depth_processor
    command: --output_dir ${OUTPUT_DIR}
    deploy:
      resources:
        reservations:
          devices:
          - capabilities: ["gpu"]

  segment_processor:
    build:
      context: ../docker/segment_processor
    volumes:
      - ${IMAGE_DIR}:${IMAGE_DIR}
      - ${OUTPUT_DIR}:${OUTPUT_DIR}
    depends_on:
      - caption_processor
    command: --output_dir ${OUTPUT_DIR}
    deploy:
      resources:
        reservations:
          devices:
          - capabilities: ["gpu"]

  # pointcloud_processor:
  #   build:
  #     context: ../docker/pointcloud_processor
  #   volumes:
  #     - ${IMAGE_DIR}:${IMAGE_DIR}
  #     - ${OUTPUT_DIR}:${OUTPUT_DIR}
  #   depends_on:
  #     - segment_processor
  #   command: --output_dir ${OUTPUT_DIR}
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #         - capabilities: ["gpu"]

  # prompt_processor:
  #   build:
  #     context: ../docker/prompt_processor
  #   volumes:
  #     - ${IMAGE_DIR}:${IMAGE_DIR}
  #     - ${OUTPUT_DIR}:${OUTPUT_DIR}
  #   depends_on:
  #     - pointcloud_processor
  #   command: --output_dir ${OUTPUT_DIR} --image_dir ${IMAGE_DIR}
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #         - capabilities: ["gpu"]
  # cleanup_service:
  #   image: alpine
  #   volumes:
  #     - ${OUTPUT_DIR}:${OUTPUT_DIR}
  #   entrypoint: /bin/sh
  #   command: -c "while true; do find ${OUTPUT_DIR} -type rf -name '*' -mindepth 1 -print0 | xargs -0 ls -t | tail -n   +0 | xargs -r rm; sleep 1; done"
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.1'
  #         memory: 50M
  #       reservations:
  #         cpus: '0.05'
  #         memory: 20M